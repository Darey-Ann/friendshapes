import{GUI as k}from"https://cdn.jsdelivr.net/npm/lil-gui@0.16.0/dist/lil-gui.esm.js";(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))d(s);new MutationObserver(s=>{for(const i of s)if(i.type==="childList")for(const g of i.addedNodes)g.tagName==="LINK"&&g.rel==="modulepreload"&&d(g)}).observe(document,{childList:!0,subtree:!0});function n(s){const i={};return s.integrity&&(i.integrity=s.integrity),s.referrerPolicy&&(i.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?i.credentials="include":s.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function d(s){if(s.ep)return;s.ep=!0;const i=n(s);fetch(s.href,i)}})();window.GUI=k;console.log("Vite is running!");let u,y,p,f,T,e={shape:"sphere",roundness:2,stretch:2,size:10,wireframe:!1,randomness:.5,spikiness:0,asymmetry:0,bulge:0,indentations:0,color:"#fcc2ec"};const C={sphere:{roundness:2,stretch:2,bulge:0,randomness:0,spikiness:0,asymmetry:0},cube:{roundness:10,stretch:10,bulge:0,randomness:0,spikiness:0,asymmetry:0},cylinder:{roundness:2,stretch:10,bulge:0,randomness:0,spikiness:0,asymmetry:0},octahedron:{roundness:1,stretch:1,bulge:0,randomness:0,spikiness:0,asymmetry:0}};v();S();function v(){u=new THREE.Scene,y=new THREE.PerspectiveCamera(50,window.innerWidth/window.innerHeight,.1,100),y.position.set(20,20,50),p=new THREE.WebGLRenderer({antialias:!0}),p.setSize(window.innerWidth,window.innerHeight),p.setClearColor(16777215),document.body.appendChild(p.domElement),T=new window.THREE.OrbitControls(y,p.domElement),T.enableDamping=!0;const t=new THREE.GridHelper(50,50,13421772,15658734);u.add(t),u.add(new THREE.AmbientLight(16777215,.5));const o=new THREE.DirectionalLight(16777215,.5);o.position.set(3,3,3).normalize(),u.add(o),m();const n=new GUI;n.add(e,"shape",Object.keys(C)).onChange(z),n.add(e,"roundness",1,10,.1).onChange(m),n.add(e,"stretch",1,10,1).onChange(m),n.add(e,"spikiness",0,2,.1).onChange(m),n.add(e,"asymmetry",0,1,.1).onChange(m),n.add(e,"bulge",0,10,.1).onChange(m),n.addColor(e,"color").onChange(F),n.add(e,"wireframe").onChange(m),n.add({exportSTL:j},"exportSTL").name("Export Friendshape"),window.addEventListener("resize",A),U()}function U(){const t=document.createElement("div");t.innerHTML=`
        <h1 style="text-align: left; font-size: 2rem; font-family: Inter, sans-serif; color: #333; margin-bottom: 0;">Friend Shapes</h1>
        <p style="text-align: left; font-size: 1.0rem; font-family: Inter, sans-serif; color: #666;margin-top: 0; margin-bottom: 0;">Use the sliders to create a safe and trustworthy shape</p>
        <div id="colorPicker" style="display: flex; justify-content: left; gap: 10px; margin-top: 20px;"></div>
    `,t.style.position="absolute",t.style.top="20px",t.style.left="20%",t.style.transform="translateX(-50%)",t.style.pointerEvents="none",document.body.appendChild(t)}function z(){const t=C[e.shape];e.roundness=t.roundness,e.stretch=t.stretch,e.bulge=t.bulge,e.spikiness=t.bulge,e.asymmetry=t.bulge,m()}function F(){f.material.color.set(e.color)}function G(t,o,n,d,s){const g=[],x=[];for(let h=0;h<=50;h++){let r=h/50*Math.PI-Math.PI/2;for(let w=0;w<=50;w++){let a=w/50*2*Math.PI,c=n*Math.sign(Math.cos(r))*Math.pow(Math.abs(Math.cos(r)),2/o)*Math.sign(Math.cos(a))*Math.pow(Math.abs(Math.cos(a)),2/t),l=n*Math.sign(Math.cos(r))*Math.pow(Math.abs(Math.cos(r)),2/o)*Math.sign(Math.sin(a))*Math.pow(Math.abs(Math.sin(a)),2/t),b=n*Math.sign(Math.sin(r))*Math.pow(Math.abs(Math.sin(r)),2/o),I=(Math.random()-.5)*d,H=1+s*I;c*=H,l*=H,b*=H;let E=e.asymmetry*Math.PI*(b/n),P=c*Math.cos(E)-l*Math.sin(E),O=c*Math.sin(E)+l*Math.cos(E);c=P,l=O;let L=1+e.bulge*.2*Math.sin(3*r)*Math.cos(3*a),R=1-e.indentations*.2*Math.sin(4*r)*Math.cos(4*a);c*=L*R,l*=L*R,b*=L*R,g.push(c,l,b)}}for(let h=0;h<50;h++)for(let r=0;r<50;r++){let w=h*51+r,a=w+1,c=(h+1)*51+r,l=c+1;r===49&&(a-=50,l-=50),x.push(w,a,c),x.push(a,l,c)}const M=new THREE.BufferGeometry;return M.setAttribute("position",new THREE.Float32BufferAttribute(g,3)),M.setIndex(x),M.computeVertexNormals(),M}function m(){f&&u.remove(f);const t=G(e.roundness,e.stretch,e.size,e.randomness,e.spikiness),o=new THREE.MeshStandardMaterial({color:e.color,wireframe:e.wireframe});f=new THREE.Mesh(t,o),f.position.y=e.size+1,u.add(f)}function j(){W();const o=new window.STLExporter().parse(f),n=new Blob([o],{type:"application/octet-stream"}),d=document.createElement("a");d.href=URL.createObjectURL(n),d.download="friendshape.stl",d.click()}function W(){const t=JSON.stringify(e,null,2),o=new Blob([t],{type:"text/plain"}),n=document.createElement("a");n.href=URL.createObjectURL(o),n.download="friendshape_parameters.txt",n.click()}function S(){requestAnimationFrame(S),T.update(),p.render(u,y)}function A(){y.aspect=window.innerWidth/window.innerHeight,y.updateProjectionMatrix(),p.setSize(window.innerWidth,window.innerHeight)}
